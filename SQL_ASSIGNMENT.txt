SQL ASSIGNMENT

1. SELECT JOB_ID, JOB_TITLE FROM JOBS WHERE MIN_SALARY >10000;

2. SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE BETWEEN '01-JAN-02' AND '31-DEC-2005';

3. SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE JOB_ID IN ('IT_PROG', 'SA_MAN');

4. SELECT * FROM EMPLOYEES WHERE HIRE_DATE > '01-JAN-08';

5. SELECT * FROM EMPLOYEES WHERE EMPLOYEE_ID=105 OR EMPLOYEE_ID=106;

6. SELECT FIRST_NAME, SALARY, COMMISSION_PCT,HIRE_DATE FROM EMPLOYEES WHERE SALARY<10000;

7. SELECT JOB_TITLE,MAX_SALARY-MIN_SALARY FROM JOBS WHERE MAX_SALARY BETWEEN 10000 AND 20000;

8. 
9. SELECT * FROM JOBS ORDER BY JOB_TITLE DESC;

10. SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE 'S%' OR LAST_NAME LIKE 'S%'; 

11. SELECT * FROM EMPLOYEES WHERE TO_CHAR(HIRE_DATE,'MON')='MAY';  OR SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '___MAY___%';

12. SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT IS NULL AND SALARY BETWEEN 5000 AND 10000 AND DEPARTMENT_ID=30;

13.
14. SELECT FIRST_NAME,HIRE_DATE, FLOOR((SYSDATE-HIRE_DATE)/365)"YEARS" FROM EMPLOYEES;

15. SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE TO_CHAR(HIRE_DATE,'YYYY')='2001';

16. SELECT INITCAP(FIRST_NAME), INITCAP(LAST_NAME) FROM EMPLOYEES;

17. 

18. SELECT LENGTH(FIRST_NAME) FROM EMPLOYEES WHERE LAST_NAME LIKE '%___b';

19. SELECT UPPER(FIRST_NAME), LOWER(EMAIL) FROM EMPLOYEES;

20. SELECT * FROM EMPLOYEES WHERE TO_CHAR(HIRE_DATE, 'YYYY')=TO_CHAR(SYSDATE, 'YYYY');

21. SELECT FLOOR(SYSDATE -to_date('01-jan-2011')) FROM DUAL;

22. SELECT TO_CHAR(HIRE_DATE,'MM'), COUNT (*) FROM EMPLOYEES
	WHERE TO_CHAR(HIRE_DATE,'YYYY')= TO_CHAR(SYSDATE,'YYYY') GROUP BY TO_CHAR(HIRE_DATE,'MM');

23. SELECT MANAGER_ID, COUNT(*) FROM EMPLOYEES GROUP BY MANAGER_ID;

24. SELECT EMPLOYEE_ID, END_DATE FROM JOB_HISTORY;

25. SELECT COUNT(*) FROM EMPLOYEES WHERE TO_CHAR(HIRE_DATE, 'DD')>15;

26. SELECT COUNTRY_ID, COUNT(*) FROM COUNTRIES GROUP BY COUNTRY_ID;

27. SELECT DEPARTMENT_ID, AVG(SALARY) FROM EMPLOYEES WHERE COMMISSION_PCT IS NOT NULL GROUP BY DEPARTMENT_ID;

28. SELECT JOB_ID,COUNT (*), SUM(SALARY),MAX(SALARY)-MIN(SALARY) FROM EMPLOYEES GROUP BY JOB_ID;

29. SELECT JOB_ID, AVG(SALARY) FROM EMPLOYEES GROUP BY JOB_ID HAVING AVG(SALARY)>10000;

30. SELECT TO_CHAR(HIRE_DATE, 'YYYY') FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE, 'YYYY') HAVING COUNT(EMPLOYEE_ID)>10;

31. SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE COMMISSION_PCT IS NOT NULL GROUP BY DEPARTMENT_ID HAVING COUNT(COMMISSION_PCT)>5;

32. SELECT EMPLOYEE_ID FROM JOB_HISTORY GROUP BY EMPLOYEE_ID HAVING COUNT(START_DATE)>1;

33. SELECT JOB_ID FROM JOB_HISTORY WHERE (END_DATE-START_DATE)>100 GROUP BY JOB_ID HAVING COUNT(EMPLOYEE_ID)>3;

34. SELECT DEPARTMENT_ID, TO_CHAR(HIRE_DATE, 'YYYY'), COUNT(*) FROM EMPLOYEES GROUP BY DEPARTMENT_ID,TO_CHAR(HIRE_DATE, 'YYYY') ORDER BY DEPARTMENT_ID;

35. SELECT DEPARTMENT_ID FROM EMPLOYEES GROUP BY DEPARTMENT_ID, MANAGER_ID HAVING COUNT(EMPLOYEE_ID)>5;

36. UPDATE EMPLOYEES SET SALARY=8000 WHERE EMPLOYEE_ID=115 AND SALARY<6000;

37. INSERT INTO EMPLOYEES  (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE,JOB_ID, SALARY, DEPARTMENT_ID)VALUES (207, 'ANGELA', 'SNYDER','ANGELA','215 253 4737', SYSDATE, 'SA_MAN', 12000, 80);

38. DELETE FROM DEPARTMENTS WHERE DEPARTMENT_ID=20;
39. UPDATE EMPLOYEES SET JOB_ID= 'IT_PROG' WHERE EMPLOYEE_ID=110 AND DEPARTMENT_ID=10 AND NOT JOB_ID LIKE 'IT%';

40. INSERT INTO DEPARTMENTS VALUES(290, 'DEVELOPMENT', 120, 1200);
41. SELECT DEPARTMENT_NAME, COUNT(*) FROM EMPLOYEES NATURAL JOIN DEPARTMENTS GROUP BY DEPARTMENT_NAME;

42. SELECT JOB_TITLE,EMPLOYEE_ID,END_DATE-START_DATE FROM JOB_HISTORY NATURAL JOIN JOBS WHERE DEPARTMENT_ID=30; 

43. SELECT DEPARTMENT_NAME, FIRST_NAME FROM DEPARTMENTS D JOIN EMPLOYEES E ON (D.MANAGER_ID=E.EMPLOYEE_ID);

44. SELECT DEPARTMENT_NAME,FIRST_NAME,LAST_NAME,CITY FROM DEPARTMENTS D JOIN EMPLOYEES E ON (D.MANAGER_ID=E.EMPLOYEE_ID) 
    JOIN LOCATIONS L ON (D.LOCATION_ID=L.LCATION_ID);
45. SELECT COUNTRY_NAME, CITY, DEPARTMENT_NAME FROM DEPARTMENTS D JOIN LOCATIONS L ON (D.LOCATION_ID=L.LOCATION_ID) JOIN COUNTRIES C USING(COUNTRY_ID);

46. SELECT JOB_TITLE, DEPARTMENT_NAME, LAST_NAME,START_DATE FROM JOB_HISTORY JOIN JOBS USING(JOB_ID) JOIN DEPARTMENTS USING(DEPARTMENT_ID) 
    JOIN EMPLOYEES USING(EMPLOYEE_ID) WHERE TO_CHAR(HIRE_DATE, 'YYYY') BETWEEN 2000 AND 2005;

47. SELECT JOB_TITLE, AVG(SALARY) FROM JOBS JOIN EMPLOYEES USING(JOB_ID) GROUP BY JOB_TITLE;

48. SELECT JOB_TITLE,FIRST_NAME,MAX_SALARY-SALARY FROM JOBS JOIN EMPLOYEES USING(JOB_ID) ORDER BY JOB_TITLE;

49. SELECT LAST_NAME,JOB_TITLE FROM JOBS JOIN EMPLOYEES USING(JOB_ID) WHERE COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID=30;

50. SELECT JH.* FROM JOB_HISTORY JH JOIN EMPLOYEES E ON (JH.EMPLOYEE_ID=E.EMPLOYEE_ID) WHERE SALARY>15000;

51. SELECT DEPARTMENT_NAME,FIRST_NAME, SALARY FROM DEPARTMENTS D JOIN EMPLOYEES E ON (D.MANAGER_ID=E.MANAGER_ID) WHERE (SYSDATE-HIRE_DATE)/365 > 5;

52. 

53. SELECT FIRST_NAME,JOB_TITLE FROM EMPLOYEES E JOIN JOB_HISTORY JH ON (E.EMPLOYEE_ID=JH.EMPLOYEE_ID) JOIN JOBS J ON (J.JOB_ID=JH.JOB_ID) 
    WHERE (END_DATE-START_DATE)/30 <6;
54. SELECT FIRST_NAME, LAST_NAME, COUNTRY_NAME FROM EMPLOYEES E JOIN DEPARTMENTS D ON (D.DEPARTMENT_ID=E.DEPARTMENT_ID) 
    JOIN LOCATIONS L ON (L.LOCATION_ID=D.LOCATION_ID) 
    JOIN COUNTRIES C ON (C.COUNTRY_ID=L.COUNTRY_ID);

55. SELECT DEPARTMENT_NAME,AVG(SALARY),COUNT (COMMISSION_PCT) FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID) GROUP BY  DEPARTMENT_NAME;

56. SELECT D.* FROM DEPARTMENTS D JOIN EMPLOYEES E ON (D.MANAGER_ID=E.EMPLOYEE_ID) WHERE FIRST_NAME='Smith';

57. SELECT JOB_TITLE FROM JOBS WHERE JOB_ID IN (SELECT JOB_ID FROM JOB_HISTORY WHERE TO_CHAR(START_DATE, 'YYYY')=TO_CHAR(SYSDATE, 'YYYY'));

58. SELECT * FROM EMPLOYEES WHERE EMPLOYEE_ID NOT IN (SELECT EMPLOYEE_ID FROM JOB_HISTORY);

59. SELECT JOB_TITLE, AVG(SALARY) FROM JOBS JOIN EMPLOYEES USING(JOB_ID) WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM JOB_HISTORY) GROUP BY JOB_TITLE;

60. SELECT COUNTRY_NAME, CITY, COUNT(DEPARTMENT_ID) FROM COUNTRIES JOIN LOCATIONS USING(COUNTRY_ID) 
    JOIN DEPARTMENTS USING(LOCATION_ID) WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM EMPLOYEES 
    GROUP BY DEPARTMENT_ID HAVING COUNT(EMPLOYEE_ID)>5) 
    GROUP BY COUNTRY_NAME, CITY;

61. SELECT M.FIRST_NAME AS "MANAGER" FROM EMPLOYEES E JOIN EMPLOYEES M ON (E.MANAGER_ID=M.EMPLOYEE_ID) GROUP BY M.FIRST_NAME HAVING COUNT(E.MANAGER_ID)>5;

62. SELECT FIRST_NAME, JOB_TITLE, START_DATE, END_DATE FROM JOB_HISTORY JH JOIN JOBS J USING (JOB_ID) 
    JOIN EMPLOYEES E  ON ( JH.EMPLOYEE_ID = E.EMPLOYEE_ID) WHERE COMMISSION_PCT IS NULL

63. SELECT DEPARTMENT_NAME FROM DEPARTMENTS WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FLOOR((SYSDATE-HIRE_DATE)/365)<2);

64. SELECT * FROM DEPARTMENTS
    WHERE DEPARTMENT_ID IN 
    (SELECT DEPARTMENT_ID FROM EMPLOYEES 
    WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM JOB_HISTORY) 
    GROUP BY DEPARTMENT_ID
    HAVING MAX(SALARY) >10000);

65. 
SELECT * FROM JOBS WHERE JOB_ID IN (SELECT JOB_ID FROM EMPLOYEES WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM JOB_HISTORY WHERE JOB_ID='IT_PROG'));

66. 

67. SELECT CITY FROM LOCATIONS WHERE LOCATION_ID IN (SELECT LOCATION_ID FROM DEPARTMENTS 
    WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID=105));

68. SELECT MIN(SALARY) FROM (SELECT DISTINCT SALARY FROM EMPLOYEES ORDER BY SALARY DESC) WHERE ROWNUM<4;








